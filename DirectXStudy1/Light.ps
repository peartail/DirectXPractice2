cbuffer LightBuffer
{
	float4 ambientColor;
	float4 diffuse;
	float3 lightdir;
	float padding;
};

struct PInput
{
	float4 pos : SV_POSITION;
	float2 tex : TEXCOORD0;
	float3 normal : NORMAL;
};

Texture2D g_tex;
SamplerState g_sample;


float4 PS(PInput i) : SV_TARGET
{
	float4 texColor;
	float3 ld;
	float lightIntensity;
	float4 color;

	texColor = g_tex.Sample(g_sample, i.tex);

	color = ambientColor;

	ld = -lightdir;

	lightIntensity = saturate(dot(i.normal, ld));

	if(lightIntensity > 0.0f)
	{
		color += (diffuse * lightIntensity);
	}

	color = saturate(color);

	color = color * texColor;

	return color;
}